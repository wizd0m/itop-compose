TYPE=VIEW
query=select distinct `KnownError`.`id` AS `id`,`KnownError`.`name` AS `name`,`KnownError`.`cust_id` AS `org_id`,`Organization_org_id`.`name` AS `cust_name`,`KnownError`.`problem_id` AS `problem_id`,`Problem_problem_id_Ticket`.`ref` AS `problem_ref`,`KnownError`.`symptom` AS `symptom`,`KnownError`.`rootcause` AS `root_cause`,`KnownError`.`workaround` AS `workaround`,`KnownError`.`solution` AS `solution`,`KnownError`.`error_code` AS `error_code`,`KnownError`.`domain` AS `domain`,`KnownError`.`vendor` AS `vendor`,`KnownError`.`model` AS `model`,`KnownError`.`version` AS `version`,cast(concat(coalesce(`KnownError`.`name`,\'\')) as char charset utf8mb4) AS `friendlyname`,cast(concat(coalesce(`Organization_org_id`.`name`,\'\')) as char charset utf8mb4) AS `org_id_friendlyname`,coalesce((`Organization_org_id`.`status` = \'inactive\'),0) AS `org_id_obsolescence_flag`,cast(concat(coalesce(`Problem_problem_id_Ticket`.`ref`,\'\')) as char charset utf8mb4) AS `problem_id_friendlyname` from ((`itop27`.`knownerror` `KnownError` join `itop27`.`organization` `Organization_org_id` on((`KnownError`.`cust_id` = `Organization_org_id`.`id`))) left join `itop27`.`ticket` `Problem_problem_id_Ticket` on((`KnownError`.`problem_id` = `Problem_problem_id_Ticket`.`id`))) where coalesce((`Problem_problem_id_Ticket`.`finalclass` = \'Problem\'),1)
md5=ff19af642f4cc82bbd40e564019e1ad2
updatable=0
algorithm=0
definer_user=root
definer_host=%
suid=2
with_check_option=0
timestamp=2020-05-02 08:14:55
create-version=1
source=SELECT\n DISTINCT `KnownError`.`id` AS `id`,\n `KnownError`.`name` AS `name`,\n `KnownError`.`cust_id` AS `org_id`,\n `Organization_org_id`.`name` AS `cust_name`,\n `KnownError`.`problem_id` AS `problem_id`,\n `Problem_problem_id_Ticket`.`ref` AS `problem_ref`,\n `KnownError`.`symptom` AS `symptom`,\n `KnownError`.`rootcause` AS `root_cause`,\n `KnownError`.`workaround` AS `workaround`,\n `KnownError`.`solution` AS `solution`,\n `KnownError`.`error_code` AS `error_code`,\n `KnownError`.`domain` AS `domain`,\n `KnownError`.`vendor` AS `vendor`,\n `KnownError`.`model` AS `model`,\n `KnownError`.`version` AS `version`,\n CAST(CONCAT(COALESCE(`KnownError`.`name`, \'\')) AS CHAR) AS `friendlyname`,\n CAST(CONCAT(COALESCE(`Organization_org_id`.`name`, \'\')) AS CHAR) AS `org_id_friendlyname`,\n COALESCE((`Organization_org_id`.`status` = \'inactive\'), 0) AS `org_id_obsolescence_flag`,\n CAST(CONCAT(COALESCE(`Problem_problem_id_Ticket`.`ref`, \'\')) AS CHAR) AS `problem_id_friendlyname`\n FROM \n   `knownerror` AS `KnownError`\n   INNER JOIN \n      `organization` AS `Organization_org_id`\n    ON `KnownError`.`cust_id` = `Organization_org_id`.`id`\n   LEFT JOIN \n      `ticket` AS `Problem_problem_id_Ticket`\n    ON `KnownError`.`problem_id` = `Problem_problem_id_Ticket`.`id`\n WHERE COALESCE((`Problem_problem_id_Ticket`.`finalclass` IN (\'Problem\')), 1)
client_cs_name=utf8mb4
connection_cl_name=utf8mb4_unicode_ci
view_body_utf8=select distinct `KnownError`.`id` AS `id`,`KnownError`.`name` AS `name`,`KnownError`.`cust_id` AS `org_id`,`Organization_org_id`.`name` AS `cust_name`,`KnownError`.`problem_id` AS `problem_id`,`Problem_problem_id_Ticket`.`ref` AS `problem_ref`,`KnownError`.`symptom` AS `symptom`,`KnownError`.`rootcause` AS `root_cause`,`KnownError`.`workaround` AS `workaround`,`KnownError`.`solution` AS `solution`,`KnownError`.`error_code` AS `error_code`,`KnownError`.`domain` AS `domain`,`KnownError`.`vendor` AS `vendor`,`KnownError`.`model` AS `model`,`KnownError`.`version` AS `version`,cast(concat(coalesce(`KnownError`.`name`,\'\')) as char charset utf8mb4) AS `friendlyname`,cast(concat(coalesce(`Organization_org_id`.`name`,\'\')) as char charset utf8mb4) AS `org_id_friendlyname`,coalesce((`Organization_org_id`.`status` = \'inactive\'),0) AS `org_id_obsolescence_flag`,cast(concat(coalesce(`Problem_problem_id_Ticket`.`ref`,\'\')) as char charset utf8mb4) AS `problem_id_friendlyname` from ((`itop27`.`knownerror` `KnownError` join `itop27`.`organization` `Organization_org_id` on((`KnownError`.`cust_id` = `Organization_org_id`.`id`))) left join `itop27`.`ticket` `Problem_problem_id_Ticket` on((`KnownError`.`problem_id` = `Problem_problem_id_Ticket`.`id`))) where coalesce((`Problem_problem_id_Ticket`.`finalclass` = \'Problem\'),1)
